version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: llm_workflow_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: llm_workflow
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: llm_workflow_backend
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/llm_workflow
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=true
    command: python backend/test_app.py

  frontend:
    image: node:18-alpine
    container_name: llm_workflow_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    command: sh -c "cd /app && npm install && npm start"

volumes:
  postgres_data: 