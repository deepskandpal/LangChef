import React, { useState } from 'react';
import { Container, Row, Col, Form, Button, Card, Spinner } from 'react-bootstrap';
import { useAuth } from '../contexts/AuthContext';

const Playground = () => {
  const { user } = useAuth();
  const [prompt, setPrompt] = useState('');
  const [response, setResponse] = useState('');
  const [loading, setLoading] = useState(false);
  const [selectedModel, setSelectedModel] = useState('anthropic.claude-3-sonnet-20240229-v1:0');

  const models = [
    { id: 'anthropic.claude-3-sonnet-20240229-v1:0', name: 'Claude 3 Sonnet' },
    { id: 'anthropic.claude-3-haiku-20240307-v1:0', name: 'Claude 3 Haiku' },
    { id: 'anthropic.claude-3-opus-20240229-v1:0', name: 'Claude 3 Opus' },
    { id: 'anthropic.claude-v2:1', name: 'Claude 2' },
    { id: 'meta.llama3-70b-instruct-v1:0', name: 'Llama 3 70B' },
    { id: 'meta.llama3-8b-instruct-v1:0', name: 'Llama 3 8B' },
  ];

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!prompt.trim()) return;

    setLoading(true);
    setResponse('');

    try {
      // This would be the actual API call in a real implementation
      setTimeout(() => {
        setResponse(`This is a placeholder response for "${prompt}". In a real implementation, this would be generated by the ${selectedModel} model.`);
        setLoading(false);
      }, 1500);
    } catch (error) {
      console.error('Error generating response:', error);
      setResponse('Error generating response. Please try again.');
      setLoading(false);
    }
  };

  return (
    <Container className="py-5">
      <Row className="mb-4">
        <Col>
          <h1>Playground</h1>
          <p className="text-muted">Experiment with different prompts and models</p>
        </Col>
      </Row>

      <Row>
        <Col md={4} className="mb-3">
          <Card>
            <Card.Body>
              <Card.Title>Settings</Card.Title>
              <Form.Group className="mb-3">
                <Form.Label>Model</Form.Label>
                <Form.Select 
                  value={selectedModel}
                  onChange={(e) => setSelectedModel(e.target.value)}
                >
                  {models.map(model => (
                    <option key={model.id} value={model.id}>
                      {model.name}
                    </option>
                  ))}
                </Form.Select>
              </Form.Group>
            </Card.Body>
          </Card>
        </Col>

        <Col md={8}>
          <Card>
            <Card.Body>
              <Form onSubmit={handleSubmit}>
                <Form.Group className="mb-3">
                  <Form.Label>Prompt</Form.Label>
                  <Form.Control
                    as="textarea"
                    rows={5}
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    placeholder="Enter your prompt here..."
                  />
                </Form.Group>
                <Button 
                  variant="primary" 
                  type="submit"
                  disabled={loading || !prompt.trim()}
                >
                  {loading ? (
                    <>
                      <Spinner animation="border" size="sm" className="me-2" />
                      Generating...
                    </>
                  ) : 'Generate Response'}
                </Button>
              </Form>

              {response && (
                <div className="mt-4">
                  <h5>Response:</h5>
                  <Card>
                    <Card.Body>
                      <pre style={{ whiteSpace: 'pre-wrap' }}>{response}</pre>
                    </Card.Body>
                  </Card>
                </div>
              )}
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
};

export default Playground; 